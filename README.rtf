{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;\red255\green255\blue255;\red25\green25\blue25;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl354

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 __   ___    ___                 ___    __  _    _\
|__\\ | __\\ /      \\  \\   ^   /  |___     ||     \\  /\
|__/ |    \\  \\___/    \\/  \\/    ___|   _||_  _/  \\_\
\pard\pardeftab720\sl354
\cf4 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
Release version 1.0.0 (Archimedes)\
October 23rd, 2015\
\pard\pardeftab720\sl354
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
README\
\
\pard\pardeftab720\sa240
\cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Browsix is a UNIX-like processing model and kernel designed to run in modern web browsers. \
\cf4 \expnd0\expndtw0\kerning0
The purpose of this Readme is to provide detailed instructions for running and testing Browsix, as well as a few hints for those wishing to read and edit the code. For information about the Browsix system design, see the report at ./report.tex\
\pard\pardeftab720\sl354
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 WEBSITE\
{\field{\*\fldinst{HYPERLINK "https://github.com/plasma-umass/project-1-brash-browser-shell-bobby-and-craig"}}{\fldrslt https://github.com/plasma-umass/project-1-brash-browser-shell-bobby-and-craig}}\
\
CONTACT\
If you have questions, comments, suggestions or concerns, please contact \cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 bobbypowers@gmail.com or q7h0u6h7@gmail.com
\f1\fs24 \

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
RUNNING & TESTING\
\pard\pardeftab720\sl354
\cf4 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 One of the advantages of the Browsix design is that running and testing is quite simple. Using a combination of make, npm, and bower, package installation is handled automatically e.g., browserfs is pulled in through npm.  The exceptions to this are the following pre-reqs, which must be installed prior to building Browsix:\
\pard\pardeftab720\sl354
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Node.js (see {\field{\*\fldinst{HYPERLINK "https://nodejs.org/en/"}}{\fldrslt https://nodejs.org/en/}})\
a C compiler (e.g., {\field{\*\fldinst{HYPERLINK "https://gcc.gnu.org/"}}{\fldrslt https://gcc.gnu.org/}})\
gnu make (see {\field{\*\fldinst{HYPERLINK "https://www.gnu.org/software/make/"}}{\fldrslt https://www.gnu.org/software/make/}})\
\
To run the web terminal, type \'93make serve\'94 on the command line while in the project directory.  To run the the tests type \'93make test\'94 instead. If a browser doesn\'92t automatically pop up on running make test, open a browser and type localhost:9876 in the address bar.  That\'92s it! We should note that Browsix has been \cf4 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 tested using Node4.\
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
CODE\
The typescript src files for kernel, browser-node, and utilities in ./src/kernel, ./src/broswer-node, and ./src/bin, respectively. Complied JavaScript code can be found in the same place, but replacing ./src with./lib. These can be run using \'93node cmd\'94. Versions of the utilities can be run directly from the (native) command line using the files found in ./fs/usr/bin. Various tests can be found in ./test. Both the syscalls and bindings can be found in ./src/browser-node directory in syscall.ts and the binding subdir. \
\pard\pardeftab720\sl354
\cf4 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
To enter into interactive debugging, open ./src/kernel/kernel.ts, and change the following line from:\
let DEBUG = false;\
\pard\pardeftab720\sl354
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 to:\
\pard\pardeftab720\sl354
\cf4 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 let DEBUG = true;\
\pard\pardeftab720\sl354
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Run the tests and use chrome\'92s debugging tools.\
\
License info:\
Currently unlicensed, but definitely provided without guarantee, so don\'92t use this to launch missiles or perform delicate surgery (seriously).}